apiVersion: batch/v1
kind: Job
metadata:
  name: '{{ job.cleanup_job_name }}'
  annotations:
    job_runner_job_type: "cleanup"
    job_runner_related_job: "{{ job.name }}"
spec:
  template:
    spec:
      containers:
      - name: cleaner
        image: ivoscc/docker-gcsfuse-utils
        volumeMounts:
          - name: gcs-api-key-volume
            mountPath: "/apikey/"
            readOnly: true
          - name: task-pv-storage-output
            mountPath: "/process-output/"
            readOnly: true
        securityContext:
          privileged: true
          capabilities:
            add:
              - SYS_ADMIN
        lifecycle:
          postStart:
            exec:
              command: ["gcsfuse", "--key-file", "/apikey/gcs-api-key.json", "-o", "nonempty", "{{ bucket_name }}", "/mnt/"]
          preStop:
            exec:
              command: ["fusermount", "-u", "/mnt/"]
        command: [ "/bin/sh", "-c", "--" ]
        args: [ "while ! `mountpoint -q /mnt/`; do sleep 1; done && zip -r /mnt/{{job.name}}-output.zip /process-output/" ]
      volumes:
        - name: task-pv-storage-output
          persistentVolumeClaim:
            claimName: {{ job.output_pvc_claim_name }}
        - name: gcs-api-key-volume
          secret:
            secretName: gcs-api-key
      restartPolicy: Never
  backoffLimit: {{ backoff_limit }}
